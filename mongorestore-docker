#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

# Default values
HOST="localhost"
USER=""
PASSWORD=""
PORT="27017"  # Default MongoDB port
DATABASE=""
INPUT_FILE=""

# Function to display usage
usage() {
    echo "Usage: $0 [-u username] [-h hostname] [-p port] [-P password] [-d database] -f input_file [mongorestore options]"
    exit 1
}

# Parse command-line arguments
while getopts "u:h:p:P:d:f:" opt; do
    case $opt in
        u) USER="$OPTARG" ;;
        h) HOST="$OPTARG" ;;
        p) PORT="$OPTARG" ;;
        P) PASSWORD="$OPTARG" ;;
        d) DATABASE="$OPTARG" ;;
        f) INPUT_FILE="$OPTARG" ;;
        *) usage ;;
    esac
done

# Check if required arguments are provided
if [ -z "$DB" ] || [ -z "$INPUT_FILE" ]; then
    usage
fi

# Ensure the input file or directory exists
if [ ! -e "$INPUT_FILE" ]; then
    echo "Error: Input file or directory '$INPUT_FILE' does not exist."
    exit 1
fi

# Extract the directory and filename from the input path
INPUT_DIR=$(dirname "$INPUT_FILE")
INPUT_FILENAME=$(basename "$INPUT_FILE")

# Construct MongoDB URI
MONGO_URI="mongodb://${USER}:${PASSWORD}@${HOST}:${PORT}/${DATABASE}"

# Run mongorestore using Docker
docker run -it --rm -v "$INPUT_DIR":/backup mongo \
    mongorestore --uri="$MONGO_URI" "/backup/$INPUT_FILENAME" "$@"

echo "Restore completed from $INPUT_FILE to database $DB on host $HOST."
